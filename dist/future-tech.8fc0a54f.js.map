{"mappings":"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","sources":["<anon>","scripts/main.js","scripts/Header.js","scripts/Tabs.js","scripts/BaseComponent.js","scripts/VideoPlayer.js","scripts/ExpandableContent.js","scripts/utils/pxToRem.js","scripts/InputMask.js","scripts/Select.js","scripts/MatchMedia.js","scripts/utils/defineScrollBarWidthCSSVar.js"],"sourcesContent":["class $0e9769a1f738423d$var$Header {\n    selectors = {\n        root: '[data-js-header]',\n        overlay: '[data-js-header-overlay]',\n        burgerButton: '[data-js-header-burger-button]'\n    };\n    stateClasses = {\n        isActive: 'is-active',\n        isLock: 'is-lock'\n    };\n    constructor(){\n        this.rootElement = document.querySelector(this.selectors.root);\n        this.overlayElement = this.rootElement.querySelector(this.selectors.overlay);\n        this.burgerButtonElement = this.rootElement.querySelector(this.selectors.burgerButton);\n        this.bindEvent();\n    }\n    onBurgerButtonClick = ()=>{\n        this.burgerButtonElement.classList.toggle(this.stateClasses.isActive);\n        this.overlayElement.classList.toggle(this.stateClasses.isActive);\n        document.documentElement.classList.toggle(this.stateClasses.isLock);\n    };\n    bindEvent() {\n        this.burgerButtonElement.addEventListener('click', this.onBurgerButtonClick);\n    }\n}\nvar $0e9769a1f738423d$export$2e2bcd8739ae039 = $0e9769a1f738423d$var$Header;\n\n\nclass $55ef01291f2133b3$var$BaseComponent {\n    constructor(){\n        if (this.constructor === $55ef01291f2133b3$var$BaseComponent) throw new Error(\"\\u041D\\u0435\\u0432\\u043E\\u0437\\u043C\\u043E\\u0436\\u043D\\u043E \\u0441\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u044D\\u043A\\u0437\\u0435\\u043C\\u043F\\u043B\\u044F\\u0440 \\u0430\\u0431\\u0441\\u0442\\u0440\\u0430\\u043A\\u0442\\u043D\\u043E\\u0433\\u043E \\u043A\\u043B\\u0430\\u0441\\u0441\\u0430 BaseComponent!\");\n    }\n    getProxyState(initialState) {\n        return new Proxy(initialState, {\n            get: (target, prop)=>{\n                return target[prop];\n            },\n            set: (target, prop, newValue)=>{\n                const oldValue = target[prop];\n                target[prop] = newValue;\n                if (newValue !== oldValue) this.updateUI();\n                return true;\n            }\n        });\n    }\n    /**\r\n     * Перерисовка UI в ответ на обновление состояния\r\n     */ updateUI() {\n        throw new Error(\"\\u041D\\u0435\\u043E\\u0431\\u0445\\u043E\\u0434\\u0438\\u043C\\u043E \\u0440\\u0435\\u0430\\u043B\\u0438\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C \\u043C\\u0435\\u0442\\u043E\\u0434 updateUI!\");\n    }\n}\nvar $55ef01291f2133b3$export$2e2bcd8739ae039 = $55ef01291f2133b3$var$BaseComponent;\n\n\nconst $85eb857beeacec9d$var$rootSelector = '[data-js-tabs]';\nclass $85eb857beeacec9d$var$Tabs extends (0, $55ef01291f2133b3$export$2e2bcd8739ae039) {\n    selectors = {\n        root: $85eb857beeacec9d$var$rootSelector,\n        button: '[data-js-tabs-button]',\n        content: '[data-js-tabs-content]'\n    };\n    stateClasses = {\n        isActive: 'is-active'\n    };\n    stateAttributes = {\n        ariaSelected: 'aria-selected',\n        tabIndex: 'tabindex'\n    };\n    constructor(rootElement){\n        super();\n        this.rootElement = rootElement;\n        this.buttonElements = this.rootElement.querySelectorAll(this.selectors.button);\n        this.contentElements = this.rootElement.querySelectorAll(this.selectors.content);\n        this.state = this.getProxyState({\n            activeTabIndex: [\n                ...this.buttonElements\n            ].findIndex((buttonElement)=>buttonElement.classList.contains(this.stateClasses.isActive))\n        });\n        this.limitTabsIndex = this.buttonElements.length - 1;\n        this.bindEvents();\n    }\n    updateUI() {\n        const { activeTabIndex: activeTabIndex } = this.state;\n        this.buttonElements.forEach((buttonElement, index)=>{\n            const isActive = index === activeTabIndex;\n            buttonElement.classList.toggle(this.stateClasses.isActive, isActive);\n            buttonElement.setAttribute(this.stateAttributes.ariaSelected, isActive.toString());\n            buttonElement.setAttribute(this.stateAttributes.tabIndex, isActive ? '0' : '-1');\n        });\n        this.contentElements.forEach((contentElement, index)=>{\n            const isActive = index === activeTabIndex;\n            contentElement.classList.toggle(this.stateClasses.isActive, isActive);\n        });\n    }\n    activateTab(newTabIndex) {\n        this.state.activeTabIndex = newTabIndex;\n        this.buttonElements[newTabIndex].focus();\n    }\n    previousTab = ()=>{\n        const newTabIndex = this.state.activeTabIndex === 0 ? this.limitTabsIndex : this.state.activeTabIndex - 1;\n        this.activateTab(newTabIndex);\n    };\n    nextTab = ()=>{\n        const newTabIndex = this.state.activeTabIndex === this.limitTabsIndex ? 0 : this.state.activeTabIndex + 1;\n        this.activateTab(newTabIndex);\n    };\n    firstTab = ()=>{\n        this.activateTab(0);\n    };\n    lastTab = ()=>{\n        this.activateTab(this.limitTabsIndex);\n    };\n    onButtonClick(buttonIndex) {\n        this.state.activeTabIndex = buttonIndex;\n    }\n    onKeyDown = (event)=>{\n        const { code: code, metaKey: metaKey } = event;\n        const action = {\n            ArrowLeft: this.previousTab,\n            ArrowRight: this.nextTab,\n            Home: this.firstTab,\n            End: this.lastTab\n        }[code];\n        const isMacHomeKey = metaKey && code === 'ArrowLeft';\n        if (isMacHomeKey) {\n            this.firstTab();\n            return;\n        }\n        const isMacEndKey = metaKey && code === 'ArrowRight';\n        if (isMacEndKey) {\n            this.lastTab();\n            return;\n        }\n        action?.();\n    };\n    bindEvents() {\n        this.buttonElements.forEach((buttonElement, index)=>{\n            buttonElement.addEventListener('click', ()=>this.onButtonClick(index));\n        });\n        this.rootElement.addEventListener('keydown', this.onKeyDown);\n    }\n}\nclass $85eb857beeacec9d$var$TabsCollection {\n    constructor(){\n        this.init();\n    }\n    init() {\n        document.querySelectorAll($85eb857beeacec9d$var$rootSelector).forEach((element)=>{\n            new $85eb857beeacec9d$var$Tabs(element);\n        });\n    }\n}\nvar $85eb857beeacec9d$export$2e2bcd8739ae039 = $85eb857beeacec9d$var$TabsCollection;\n\n\nconst $19542c542202b907$var$rootSelector = '[data-js-video-player]';\nclass $19542c542202b907$var$VideoPlayer {\n    selectors = {\n        root: $19542c542202b907$var$rootSelector,\n        video: '[data-js-video-player-video]',\n        panel: '[data-js-video-player-panel]',\n        playButton: '[data-js-video-player-button]'\n    };\n    stateClasses = {\n        isActive: 'is-active'\n    };\n    constructor(rootElement){\n        this.rootElement = rootElement;\n        this.videoElement = this.rootElement.querySelector(this.selectors.video);\n        this.panelElement = this.rootElement.querySelector(this.selectors.panel);\n        this.playButtonElement = this.rootElement.querySelector(this.selectors.playButton);\n        this.bindEvents();\n    }\n    onPlayButtonClick = ()=>{\n        this.videoElement.play();\n        this.videoElement.controls = true;\n        this.panelElement.classList.remove(this.stateClasses.isActive);\n    };\n    onVideoPause = ()=>{\n        this.videoElement.controls = false;\n        this.panelElement.classList.add(this.stateClasses.isActive);\n    };\n    bindEvents() {\n        this.playButtonElement.addEventListener('click', this.onPlayButtonClick);\n        this.videoElement.addEventListener('pause', this.onVideoPause);\n    }\n}\nclass $19542c542202b907$var$VideoPlayerCollection {\n    constructor(){\n        this.init();\n    }\n    init() {\n        document.querySelectorAll($19542c542202b907$var$rootSelector).forEach((element)=>{\n            new $19542c542202b907$var$VideoPlayer(element);\n        });\n    }\n}\nvar $19542c542202b907$export$2e2bcd8739ae039 = $19542c542202b907$var$VideoPlayerCollection;\n\n\nconst $eb913d046d45497d$var$pxToRem = (pixels)=>{\n    return pixels / 16;\n};\nvar $eb913d046d45497d$export$2e2bcd8739ae039 = $eb913d046d45497d$var$pxToRem;\n\n\nconst $cb5b3f172f08972f$var$rootSelector = '[data-js-expandable-content]';\nclass $cb5b3f172f08972f$var$ExpandableContent {\n    selectors = {\n        root: $cb5b3f172f08972f$var$rootSelector,\n        button: '[data-js-expandable-content-button]'\n    };\n    stateClasses = {\n        isExpanded: 'is-expanded'\n    };\n    animationParams = {\n        duration: 500,\n        easing: 'ease'\n    };\n    constructor(rootElement){\n        this.rootElement = rootElement;\n        this.buttonElement = this.rootElement.querySelector(this.selectors.button);\n        this.bindEvents();\n    }\n    expand() {\n        const { offsetHeight: offsetHeight, scrollHeight: scrollHeight } = this.rootElement;\n        this.rootElement.classList.add(this.stateClasses.isExpanded);\n        this.rootElement.animate([\n            {\n                maxHeight: `${(0, $eb913d046d45497d$export$2e2bcd8739ae039)(offsetHeight)}rem`\n            },\n            {\n                maxHeight: `${(0, $eb913d046d45497d$export$2e2bcd8739ae039)(scrollHeight)}rem`\n            }\n        ], this.animationParams);\n    }\n    onButtonClick = ()=>{\n        this.expand();\n    };\n    bindEvents() {\n        this.buttonElement.addEventListener('click', this.onButtonClick);\n    }\n}\nclass $cb5b3f172f08972f$var$ExpandableContentCollection {\n    constructor(){\n        this.init();\n    }\n    init() {\n        document.querySelectorAll($cb5b3f172f08972f$var$rootSelector).forEach((element)=>{\n            new $cb5b3f172f08972f$var$ExpandableContent(element);\n        });\n    }\n}\nvar $cb5b3f172f08972f$export$2e2bcd8739ae039 = $cb5b3f172f08972f$var$ExpandableContentCollection;\n\n\nconst $dbbd03019c35c432$var$rootSelector = '[data-js-input-mask]';\nclass $dbbd03019c35c432$var$InputMask {\n    constructor(rootElement){\n        this.rootElement = rootElement;\n        this.init();\n    }\n    init() {\n        const isLibReady = typeof window.IMask !== 'undefined';\n        if (isLibReady) window.IMask(this.rootElement, {\n            mask: this.rootElement.dataset.jsInputMask\n        });\n        else console.error('Library \"imask\" didn`t switch, check  it please!');\n    }\n}\nclass $dbbd03019c35c432$var$InputMaskCollection {\n    constructor(){\n        this.init();\n    }\n    init() {\n        document.querySelectorAll($dbbd03019c35c432$var$rootSelector).forEach((element)=>{\n            new $dbbd03019c35c432$var$InputMask(element);\n        });\n    }\n}\nvar $dbbd03019c35c432$export$2e2bcd8739ae039 = $dbbd03019c35c432$var$InputMaskCollection;\n\n\n\n\nconst $3d90c8372043675f$var$MatchMedia = {\n    mobile: window.matchMedia(`(width <= ${(0, $eb913d046d45497d$export$2e2bcd8739ae039)(767.98)}rem)`)\n};\nvar $3d90c8372043675f$export$2e2bcd8739ae039 = $3d90c8372043675f$var$MatchMedia;\n\n\nconst $77e2b6b27be919e8$var$rootSelector = '[data-js-select]';\nclass $77e2b6b27be919e8$var$Select extends (0, $55ef01291f2133b3$export$2e2bcd8739ae039) {\n    selectors = {\n        root: $77e2b6b27be919e8$var$rootSelector,\n        originalControl: '[data-js-select-original-control]',\n        button: '[data-js-select-button]',\n        dropdown: '[data-js-select-dropdown]',\n        option: '[data-js-select-option]'\n    };\n    stateClasses = {\n        isExpanded: 'is-expanded',\n        isSelected: 'is-selected',\n        isCurrent: 'is-current',\n        isOnTheLeftSide: 'is-on-the-left-side',\n        isOnTheRightSide: 'is-on-the-right-side'\n    };\n    stateAttributes = {\n        ariaExpanded: 'aria-expanded',\n        ariaSelected: 'aria-selected',\n        ariaActiveDescendant: 'aria-activedescendant'\n    };\n    initialState = {\n        isExpanded: false,\n        currentOptionIndex: null,\n        selectedOptionElement: null\n    };\n    constructor(rootElement){\n        super();\n        this.rootElement = rootElement;\n        this.originalControlElement = this.rootElement.querySelector(this.selectors.originalControl);\n        this.buttonElement = this.rootElement.querySelector(this.selectors.button);\n        this.dropdownElement = this.rootElement.querySelector(this.selectors.dropdown);\n        this.optionElements = this.dropdownElement.querySelectorAll(this.selectors.option);\n        this.state = this.getProxyState({\n            ...this.initialState,\n            currentOptionIndex: this.originalControlElement.selectedIndex,\n            selectedOptionElement: this.optionElements[this.originalControlElement.selectedIndex]\n        });\n        this.fixDropdownPosition();\n        this.updateTabIndexes();\n        this.bindEvents();\n    }\n    updateUI() {\n        const { isExpanded: isExpanded, currentOptionIndex: currentOptionIndex, selectedOptionElement: selectedOptionElement } = this.state;\n        const newSelectedOptionValue = selectedOptionElement.textContent.trim();\n        const updateOriginalControl = ()=>{\n            this.originalControlElement.value = newSelectedOptionValue;\n        };\n        const updateButton = ()=>{\n            this.buttonElement.textContent = newSelectedOptionValue;\n            this.buttonElement.classList.toggle(this.stateClasses.isExpanded, isExpanded);\n            this.buttonElement.setAttribute(this.stateAttributes.ariaExpanded, isExpanded);\n            this.buttonElement.setAttribute(this.stateAttributes.ariaActiveDescendant, this.optionElements[currentOptionIndex].id);\n        };\n        const updateDropdown = ()=>{\n            this.dropdownElement.classList.toggle(this.stateClasses.isExpanded, isExpanded);\n        };\n        const updateOptions = ()=>{\n            this.optionElements.forEach((optionElement, index)=>{\n                const isCurrent = currentOptionIndex === index;\n                const isSelected = selectedOptionElement === optionElement;\n                optionElement.classList.toggle(this.stateClasses.isCurrent, isCurrent);\n                optionElement.classList.toggle(this.stateClasses.isSelected, isSelected);\n                optionElement.setAttribute(this.stateAttributes.ariaSelected, isSelected);\n            });\n        };\n        updateOriginalControl();\n        updateButton();\n        updateDropdown();\n        updateOptions();\n    }\n    toggleExpandedState() {\n        this.state.isExpanded = !this.state.isExpanded;\n    }\n    expand() {\n        this.state.isExpanded = true;\n    }\n    collapse() {\n        this.state.isExpanded = false;\n    }\n    fixDropdownPosition() {\n        const viewportWidth = document.documentElement.clientWidth;\n        const halfViewportX = viewportWidth / 2;\n        const { width: width, x: x } = this.buttonElement.getBoundingClientRect();\n        const buttonCenterX = x + width / 2;\n        const isButtonOnTheLeftViewportSide = buttonCenterX < halfViewportX;\n        this.dropdownElement.classList.toggle(this.stateClasses.isOnTheLeftSide, isButtonOnTheLeftViewportSide);\n        this.dropdownElement.classList.toggle(this.stateClasses.isOnTheRightSide, !isButtonOnTheLeftViewportSide);\n    }\n    updateTabIndexes(isMobileDevice = (0, $3d90c8372043675f$export$2e2bcd8739ae039).mobile.matches) {\n        this.originalControlElement.tabIndex = isMobileDevice ? 0 : -1;\n        this.buttonElement.tabIndex = isMobileDevice ? -1 : 0;\n    }\n    get isNeedToExpand() {\n        const isButtonFocused = document.activeElement === this.buttonElement;\n        return !this.state.isExpanded && isButtonFocused;\n    }\n    selectCurrentOption() {\n        this.state.selectedOptionElement = this.optionElements[this.state.currentOptionIndex];\n    }\n    onButtonClick = ()=>{\n        this.toggleExpandedState();\n    };\n    onClick = (event)=>{\n        const { target: target } = event;\n        const isButtonClick = target === this.buttonElement;\n        const isOutsideDropdownClick = target.closest(this.selectors.dropdown) !== this.dropdownElement;\n        if (!isButtonClick && isOutsideDropdownClick) {\n            this.collapse();\n            return;\n        }\n        const isOptionClick = target.matches(this.selectors.option);\n        if (isOptionClick) {\n            this.state.selectedOptionElement = target;\n            this.state.currentOptionIndex = [\n                ...this.optionElements\n            ].findIndex((optionElement)=>optionElement === target);\n            this.collapse();\n        }\n    };\n    onArrowUpKeyDown = ()=>{\n        if (this.isNeedToExpand) {\n            this.expand();\n            return;\n        }\n        if (this.state.currentOptionIndex > 0) this.state.currentOptionIndex--;\n    };\n    onArrowDownKeyDown = ()=>{\n        if (this.isNeedToExpand) {\n            this.expand();\n            return;\n        }\n        if (this.state.currentOptionIndex < this.optionElements.length - 1) this.state.currentOptionIndex++;\n    };\n    onSpaceKeyDown = ()=>{\n        if (this.isNeedToExpand) {\n            this.expand();\n            return;\n        }\n        this.selectCurrentOption();\n        this.collapse();\n    };\n    onEnterKeyDown = ()=>{\n        if (this.isNeedToExpand) {\n            this.expand();\n            return;\n        }\n        this.selectCurrentOption();\n        this.collapse();\n    };\n    onKeyDown = (event)=>{\n        const { code: code } = event;\n        const action = {\n            ArrowUp: this.onArrowUpKeyDown,\n            ArrowDown: this.onArrowDownKeyDown,\n            Space: this.onSpaceKeyDown,\n            Enter: this.onEnterKeyDown\n        }[code];\n        if (action) {\n            event.preventDefault();\n            action();\n        }\n    };\n    onMobileMatchMediaChange = (event)=>{\n        this.updateTabIndexes(event.matches);\n    };\n    onOriginalControlChange = ()=>{\n        this.state.selectedOptionElement = this.optionElements[this.originalControlElement.selectedIndex];\n    };\n    bindEvents() {\n        (0, $3d90c8372043675f$export$2e2bcd8739ae039).mobile.addEventListener('change', this.onMobileMatchMediaChange);\n        this.buttonElement.addEventListener('click', this.onButtonClick);\n        document.addEventListener('click', this.onClick);\n        this.rootElement.addEventListener('keydown', this.onKeyDown);\n        this.originalControlElement.addEventListener('change', this.onOriginalControlChange);\n    }\n}\nclass $77e2b6b27be919e8$var$SelectCollection {\n    constructor(){\n        this.init();\n    }\n    init() {\n        document.querySelectorAll($77e2b6b27be919e8$var$rootSelector).forEach((element)=>{\n            new $77e2b6b27be919e8$var$Select(element);\n        });\n    }\n}\nvar $77e2b6b27be919e8$export$2e2bcd8739ae039 = $77e2b6b27be919e8$var$SelectCollection;\n\n\nconst $bd7acf685e94b39f$var$defineScrollBarWidthCSSVar = ()=>{\n    document.documentElement.style.setProperty('--scrollbar-width', `${window.innerWidth - document.documentElement.clientWidth}px`);\n};\nvar $bd7acf685e94b39f$export$2e2bcd8739ae039 = $bd7acf685e94b39f$var$defineScrollBarWidthCSSVar;\n\n\nnew (0, $0e9769a1f738423d$export$2e2bcd8739ae039)();\nnew (0, $85eb857beeacec9d$export$2e2bcd8739ae039)();\nnew (0, $19542c542202b907$export$2e2bcd8739ae039)();\nnew (0, $cb5b3f172f08972f$export$2e2bcd8739ae039)();\nnew (0, $dbbd03019c35c432$export$2e2bcd8739ae039)();\nnew (0, $77e2b6b27be919e8$export$2e2bcd8739ae039)();\n(0, $bd7acf685e94b39f$export$2e2bcd8739ae039)();\n\n\n//# sourceMappingURL=future-tech.8fc0a54f.js.map\n","import Header from'./Header.js';\r\nimport TabsCollection from './Tabs.js';\r\nimport VideoPlayerCollection from './VideoPlayer.js';\r\nimport ExpandableContentCollection from './ExpandableContent.js';\r\nimport InputMaskCollection from './InputMask.js';\r\nimport SelectCollection from './Select.js';\r\nimport defineScrollBarWidthCSSVar from './utils/defineScrollBarWidthCSSVar.js'\r\n\r\n\r\n\r\nnew Header();\r\nnew TabsCollection();\r\nnew VideoPlayerCollection();\r\nnew ExpandableContentCollection();\r\nnew InputMaskCollection();\r\nnew SelectCollection();\r\n\r\ndefineScrollBarWidthCSSVar()","class Header {\r\n    selectors = {\r\n    root: '[data-js-header]',\r\n    overlay: '[data-js-header-overlay]',\r\n    burgerButton: '[data-js-header-burger-button]'\r\n    }\r\n\r\n    stateClasses = {\r\n        isActive: 'is-active',\r\n        isLock: 'is-lock'\r\n    }\r\n\r\n    constructor(){\r\n        this.rootElement = document.querySelector(this.selectors.root);\r\n        this.overlayElement = this.rootElement.querySelector(this.selectors.overlay);\r\n        this.burgerButtonElement = this.rootElement.querySelector(this.selectors.burgerButton);\r\n        this.bindEvent();\r\n    }\r\n\r\n     onBurgerButtonClick = () => {\r\n        this.burgerButtonElement.classList.toggle(this.stateClasses.isActive);\r\n        this.overlayElement.classList.toggle(this.stateClasses.isActive);\r\n        document.documentElement.classList.toggle(this.stateClasses.isLock);\r\n    }\r\n\r\n    bindEvent(){\r\n        this.burgerButtonElement.addEventListener('click', this.onBurgerButtonClick);\r\n    }\r\n}\r\n\r\nexport default Header;","import BaseComponent from './BaseComponent.js'\r\n\r\nconst rootSelector = '[data-js-tabs]'\r\n\r\nclass Tabs extends BaseComponent {\r\n  selectors = {\r\n    root: rootSelector,\r\n    button: '[data-js-tabs-button]',\r\n    content: '[data-js-tabs-content]',\r\n  }\r\n\r\n  stateClasses = {\r\n    isActive: 'is-active',\r\n  }\r\n\r\n  stateAttributes = {\r\n    ariaSelected: 'aria-selected',\r\n    tabIndex: 'tabindex',\r\n  }\r\n\r\n  constructor(rootElement) {\r\n    super()\r\n    this.rootElement = rootElement\r\n    this.buttonElements = this.rootElement.querySelectorAll(this.selectors.button)\r\n    this.contentElements = this.rootElement.querySelectorAll(this.selectors.content)\r\n    this.state = this.getProxyState({\r\n      activeTabIndex: [...this.buttonElements]\r\n        .findIndex((buttonElement) => buttonElement.classList.contains(this.stateClasses.isActive)),\r\n    })\r\n    this.limitTabsIndex = this.buttonElements.length - 1\r\n    this.bindEvents()\r\n  }\r\n\r\n  updateUI() {\r\n    const { activeTabIndex } = this.state\r\n\r\n    this.buttonElements.forEach((buttonElement, index) => {\r\n      const isActive = index === activeTabIndex\r\n\r\n      buttonElement.classList.toggle(this.stateClasses.isActive, isActive)\r\n      buttonElement.setAttribute(this.stateAttributes.ariaSelected, isActive.toString())\r\n      buttonElement.setAttribute(this.stateAttributes.tabIndex, isActive ? '0' : '-1')\r\n    })\r\n\r\n    this.contentElements.forEach((contentElement, index) => {\r\n      const isActive = index === activeTabIndex\r\n\r\n      contentElement.classList.toggle(this.stateClasses.isActive, isActive)\r\n    })\r\n  }\r\n\r\n  activateTab(newTabIndex) {\r\n    this.state.activeTabIndex = newTabIndex\r\n    this.buttonElements[newTabIndex].focus()\r\n  }\r\n\r\n  previousTab = () => {\r\n    const newTabIndex = this.state.activeTabIndex === 0\r\n      ? this.limitTabsIndex\r\n      : this.state.activeTabIndex - 1\r\n\r\n    this.activateTab(newTabIndex)\r\n  }\r\n\r\n  nextTab = () => {\r\n    const newTabIndex = this.state.activeTabIndex === this.limitTabsIndex\r\n      ? 0\r\n      : this.state.activeTabIndex + 1\r\n\r\n    this.activateTab(newTabIndex)\r\n  }\r\n\r\n  firstTab = () => {\r\n    this.activateTab(0)\r\n  }\r\n\r\n  lastTab = () => {\r\n    this.activateTab(this.limitTabsIndex)\r\n  }\r\n\r\n  onButtonClick(buttonIndex) {\r\n    this.state.activeTabIndex = buttonIndex\r\n  }\r\n\r\n  onKeyDown = (event) => {\r\n    const { code, metaKey } = event\r\n\r\n    const action = {\r\n      ArrowLeft: this.previousTab,\r\n      ArrowRight: this.nextTab,\r\n      Home: this.firstTab,\r\n      End: this.lastTab,\r\n    }[code]\r\n\r\n    const isMacHomeKey = metaKey && code === 'ArrowLeft'\r\n    if (isMacHomeKey) {\r\n      this.firstTab()\r\n      return\r\n    }\r\n\r\n    const isMacEndKey = metaKey && code === 'ArrowRight'\r\n    if (isMacEndKey) {\r\n      this.lastTab()\r\n      return\r\n    }\r\n\r\n    action?.()\r\n  }\r\n\r\n  bindEvents() {\r\n    this.buttonElements.forEach((buttonElement, index) => {\r\n      buttonElement.addEventListener('click', () => this.onButtonClick(index))\r\n    })\r\n    this.rootElement.addEventListener('keydown', this.onKeyDown)\r\n  }\r\n}\r\n\r\nclass TabsCollection {\r\n  constructor() {\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    document.querySelectorAll(rootSelector).forEach((element) => {\r\n      new Tabs(element)\r\n    })\r\n  }\r\n}\r\n\r\nexport default TabsCollection","class BaseComponent {\r\n    constructor() {\r\n      if (this.constructor === BaseComponent) {\r\n        throw new Error('Невозможно создать экземпляр абстрактного класса BaseComponent!')\r\n      }\r\n    }\r\n  \r\n    getProxyState(initialState) {\r\n      return new Proxy(initialState, {\r\n        get: (target, prop) => {\r\n          return target[prop]\r\n        },\r\n        set: (target, prop, newValue) => {\r\n          const oldValue = target[prop]\r\n  \r\n          target[prop] = newValue\r\n  \r\n          if (newValue !== oldValue) {\r\n            this.updateUI()\r\n          }\r\n  \r\n          return true\r\n        },\r\n      })\r\n    }\r\n  \r\n    /**\r\n     * Перерисовка UI в ответ на обновление состояния\r\n     */\r\n    updateUI() {\r\n      throw new Error('Необходимо реализовать метод updateUI!')\r\n    }\r\n  }\r\n  \r\n  export default BaseComponent","const rootSelector = '[data-js-video-player]'\r\n\r\nclass VideoPlayer {\r\n  selectors = {\r\n    root: rootSelector,\r\n    video: '[data-js-video-player-video]',\r\n    panel: '[data-js-video-player-panel]',\r\n    playButton: '[data-js-video-player-button]',\r\n  }\r\n\r\n  stateClasses = {\r\n    isActive: 'is-active',\r\n  }\r\n\r\n  constructor(rootElement) {\r\n    this.rootElement = rootElement\r\n    this.videoElement = this.rootElement.querySelector(this.selectors.video)\r\n    this.panelElement = this.rootElement.querySelector(this.selectors.panel)\r\n    this.playButtonElement = this.rootElement.querySelector(this.selectors.playButton)\r\n    this.bindEvents()\r\n  }\r\n\r\n  onPlayButtonClick = () => {\r\n    this.videoElement.play()\r\n    this.videoElement.controls = true\r\n    this.panelElement.classList.remove(this.stateClasses.isActive)\r\n  }\r\n\r\n  onVideoPause = () => {\r\n    this.videoElement.controls = false\r\n    this.panelElement.classList.add(this.stateClasses.isActive)\r\n  }\r\n\r\n  bindEvents() {\r\n    this.playButtonElement.addEventListener('click', this.onPlayButtonClick)\r\n    this.videoElement.addEventListener('pause', this.onVideoPause)\r\n  }\r\n}\r\n\r\nclass VideoPlayerCollection {\r\n  constructor() {\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    document.querySelectorAll(rootSelector).forEach((element) => {\r\n      new VideoPlayer(element)\r\n    })\r\n  }\r\n}\r\n\r\nexport default VideoPlayerCollection","import pxToRem from './utils/pxToRem.js'\r\n\r\nconst rootSelector = '[data-js-expandable-content]'\r\n\r\n\r\nclass ExpandableContent {\r\n  selectors = {\r\n    root: rootSelector,\r\n    button: '[data-js-expandable-content-button]'\r\n  }\r\n\r\n  stateClasses = {\r\n    isExpanded: 'is-expanded',\r\n  }\r\n\r\n  animationParams = {\r\n    duration: 500,\r\n    easing: 'ease',\r\n  }\r\n\r\n  constructor(rootElement) {\r\n    this.rootElement = rootElement\r\n    this.buttonElement = this.rootElement.querySelector(this.selectors.button)\r\n    this.bindEvents()\r\n  }\r\n\r\n  expand() {\r\n    const { offsetHeight, scrollHeight } = this.rootElement\r\n\r\n    this.rootElement.classList.add(this.stateClasses.isExpanded)\r\n    this.rootElement.animate([\r\n      {\r\n        maxHeight: `${pxToRem(offsetHeight)}rem`,\r\n      },\r\n      {\r\n        maxHeight: `${pxToRem(scrollHeight)}rem`,\r\n      },\r\n    ], this.animationParams)\r\n  }\r\n\r\n  onButtonClick = () => {\r\n    this.expand()\r\n  }\r\n\r\n  bindEvents() {\r\n    this.buttonElement.addEventListener('click', this.onButtonClick)\r\n  }\r\n}\r\n\r\nclass ExpandableContentCollection {\r\n  constructor() {\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    document.querySelectorAll(rootSelector).forEach((element) => {\r\n      new ExpandableContent(element)\r\n    })\r\n  }\r\n}\r\n\r\nexport default ExpandableContentCollection","const pxToRem = (pixels) => {\r\n    return pixels / 16\r\n  }\r\n  \r\n  export default pxToRem","const rootSelector = '[data-js-input-mask]'\r\n\r\nclass InputMask {\r\n  constructor(rootElement) {\r\n    this.rootElement = rootElement\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    const isLibReady = typeof window.IMask !== 'undefined'\r\n\r\n    if (isLibReady) {\r\n      window.IMask(this.rootElement, {\r\n        mask: this.rootElement.dataset.jsInputMask\r\n      })\r\n    } else {\r\n      console.error('Library \"imask\" didn`t switch, check  it please!')\r\n    }\r\n  }\r\n}\r\n\r\nclass InputMaskCollection {\r\n  constructor() {\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    document.querySelectorAll(rootSelector).forEach((element) => {\r\n      new InputMask(element)\r\n    })\r\n  }\r\n}\r\n\r\nexport default InputMaskCollection","import BaseComponent from './BaseComponent.js'\r\nimport MatchMedia from './MatchMedia.js'\r\n\r\nconst rootSelector = '[data-js-select]'\r\n\r\nclass Select extends BaseComponent {\r\n  selectors = {\r\n    root: rootSelector,\r\n    originalControl: '[data-js-select-original-control]',\r\n    button: '[data-js-select-button]',\r\n    dropdown: '[data-js-select-dropdown]',\r\n    option: '[data-js-select-option]',\r\n  }\r\n\r\n  stateClasses = {\r\n    isExpanded: 'is-expanded',\r\n    isSelected: 'is-selected',\r\n    isCurrent: 'is-current',\r\n    isOnTheLeftSide: 'is-on-the-left-side',\r\n    isOnTheRightSide: 'is-on-the-right-side',\r\n  }\r\n\r\n  stateAttributes = {\r\n    ariaExpanded: 'aria-expanded',\r\n    ariaSelected: 'aria-selected',\r\n    ariaActiveDescendant: 'aria-activedescendant',\r\n  }\r\n\r\n  initialState = {\r\n    isExpanded: false,\r\n    currentOptionIndex: null,\r\n    selectedOptionElement: null,\r\n  }\r\n\r\n  constructor(rootElement) {\r\n    super()\r\n    this.rootElement = rootElement\r\n    this.originalControlElement = this.rootElement.querySelector(this.selectors.originalControl)\r\n    this.buttonElement = this.rootElement.querySelector(this.selectors.button)\r\n    this.dropdownElement = this.rootElement.querySelector(this.selectors.dropdown)\r\n    this.optionElements = this.dropdownElement.querySelectorAll(this.selectors.option)\r\n    this.state = this.getProxyState({\r\n      ...this.initialState,\r\n      currentOptionIndex: this.originalControlElement.selectedIndex,\r\n      selectedOptionElement: this.optionElements[this.originalControlElement.selectedIndex],\r\n    })\r\n    this.fixDropdownPosition()\r\n    this.updateTabIndexes()\r\n    this.bindEvents()\r\n  }\r\n\r\n  updateUI() {\r\n    const {\r\n      isExpanded,\r\n      currentOptionIndex,\r\n      selectedOptionElement,\r\n    } = this.state\r\n\r\n    const newSelectedOptionValue = selectedOptionElement.textContent.trim()\r\n\r\n    const updateOriginalControl = () => {\r\n      this.originalControlElement.value = newSelectedOptionValue\r\n    }\r\n\r\n    const updateButton = () => {\r\n      this.buttonElement.textContent = newSelectedOptionValue\r\n      this.buttonElement.classList.toggle(this.stateClasses.isExpanded, isExpanded)\r\n      this.buttonElement.setAttribute(this.stateAttributes.ariaExpanded, isExpanded)\r\n      this.buttonElement.setAttribute(\r\n        this.stateAttributes.ariaActiveDescendant,\r\n        this.optionElements[currentOptionIndex].id\r\n      )\r\n    }\r\n\r\n    const updateDropdown = () => {\r\n      this.dropdownElement.classList.toggle(this.stateClasses.isExpanded, isExpanded)\r\n    }\r\n\r\n    const updateOptions = () => {\r\n      this.optionElements.forEach((optionElement, index) => {\r\n        const isCurrent = currentOptionIndex === index\r\n        const isSelected = selectedOptionElement === optionElement\r\n\r\n        optionElement.classList.toggle(this.stateClasses.isCurrent, isCurrent)\r\n        optionElement.classList.toggle(this.stateClasses.isSelected, isSelected)\r\n        optionElement.setAttribute(this.stateAttributes.ariaSelected, isSelected)\r\n      })\r\n    }\r\n\r\n    updateOriginalControl()\r\n    updateButton()\r\n    updateDropdown()\r\n    updateOptions()\r\n  }\r\n\r\n  toggleExpandedState() {\r\n    this.state.isExpanded = !this.state.isExpanded\r\n  }\r\n\r\n  expand() {\r\n    this.state.isExpanded = true\r\n  }\r\n\r\n  collapse() {\r\n    this.state.isExpanded = false\r\n  }\r\n\r\n  fixDropdownPosition() {\r\n    const viewportWidth = document.documentElement.clientWidth\r\n    const halfViewportX = viewportWidth / 2\r\n    const { width, x } = this.buttonElement.getBoundingClientRect()\r\n    const buttonCenterX = x + width / 2\r\n    const isButtonOnTheLeftViewportSide = buttonCenterX < halfViewportX\r\n\r\n    this.dropdownElement.classList.toggle(\r\n      this.stateClasses.isOnTheLeftSide,\r\n      isButtonOnTheLeftViewportSide\r\n    )\r\n\r\n    this.dropdownElement.classList.toggle(\r\n      this.stateClasses.isOnTheRightSide,\r\n      !isButtonOnTheLeftViewportSide\r\n    )\r\n  }\r\n\r\n  updateTabIndexes(isMobileDevice = MatchMedia.mobile.matches) {\r\n    this.originalControlElement.tabIndex = isMobileDevice ? 0 : -1\r\n    this.buttonElement.tabIndex = isMobileDevice ? -1 : 0\r\n  }\r\n\r\n  get isNeedToExpand() {\r\n    const isButtonFocused = document.activeElement === this.buttonElement\r\n\r\n    return (!this.state.isExpanded && isButtonFocused)\r\n  }\r\n\r\n  selectCurrentOption() {\r\n    this.state.selectedOptionElement = this.optionElements[this.state.currentOptionIndex]\r\n  }\r\n\r\n  onButtonClick = () => {\r\n    this.toggleExpandedState()\r\n  }\r\n\r\n  onClick = (event) => {\r\n    const { target } = event\r\n\r\n    const isButtonClick = target === this.buttonElement\r\n    const isOutsideDropdownClick =\r\n      target.closest(this.selectors.dropdown) !== this.dropdownElement\r\n\r\n    if (!isButtonClick && isOutsideDropdownClick) {\r\n      this.collapse()\r\n      return\r\n    }\r\n\r\n    const isOptionClick = target.matches(this.selectors.option)\r\n\r\n    if (isOptionClick) {\r\n      this.state.selectedOptionElement = target\r\n      this.state.currentOptionIndex = [...this.optionElements]\r\n        .findIndex((optionElement) => optionElement === target)\r\n      this.collapse()\r\n    }\r\n  }\r\n\r\n  onArrowUpKeyDown = () => {\r\n    if (this.isNeedToExpand) {\r\n      this.expand()\r\n      return\r\n    }\r\n\r\n    if (this.state.currentOptionIndex > 0) {\r\n      this.state.currentOptionIndex--\r\n    }\r\n  }\r\n\r\n  onArrowDownKeyDown = () => {\r\n    if (this.isNeedToExpand) {\r\n      this.expand()\r\n      return\r\n    }\r\n\r\n    if (this.state.currentOptionIndex < this.optionElements.length - 1) {\r\n      this.state.currentOptionIndex++\r\n    }\r\n  }\r\n\r\n  onSpaceKeyDown = () => {\r\n    if (this.isNeedToExpand) {\r\n      this.expand()\r\n      return\r\n    }\r\n\r\n    this.selectCurrentOption()\r\n    this.collapse()\r\n  }\r\n\r\n  onEnterKeyDown = () => {\r\n    if (this.isNeedToExpand) {\r\n      this.expand()\r\n      return\r\n    }\r\n\r\n    this.selectCurrentOption()\r\n    this.collapse()\r\n  }\r\n\r\n  onKeyDown = (event) => {\r\n    const { code } = event\r\n\r\n    const action = {\r\n      ArrowUp: this.onArrowUpKeyDown,\r\n      ArrowDown: this.onArrowDownKeyDown,\r\n      Space: this.onSpaceKeyDown,\r\n      Enter: this.onEnterKeyDown,\r\n    }[code]\r\n\r\n    if (action) {\r\n      event.preventDefault()\r\n      action()\r\n    }\r\n  }\r\n\r\n  onMobileMatchMediaChange = (event) => {\r\n    this.updateTabIndexes(event.matches)\r\n  }\r\n\r\n  onOriginalControlChange = () => {\r\n    this.state.selectedOptionElement = this.optionElements[this.originalControlElement.selectedIndex]\r\n  }\r\n\r\n  bindEvents() {\r\n    MatchMedia.mobile.addEventListener('change', this.onMobileMatchMediaChange)\r\n    this.buttonElement.addEventListener('click', this.onButtonClick)\r\n    document.addEventListener('click', this.onClick)\r\n    this.rootElement.addEventListener('keydown', this.onKeyDown)\r\n    this.originalControlElement.addEventListener('change', this.onOriginalControlChange)\r\n  }\r\n}\r\n\r\nclass SelectCollection {\r\n  constructor() {\r\n    this.init()\r\n  }\r\n\r\n  init() {\r\n    document.querySelectorAll(rootSelector).forEach((element) => {\r\n      new Select(element)\r\n    })\r\n  }\r\n}\r\n\r\nexport default SelectCollection","import pxToRem from './utils/pxToRem.js'\r\n\r\nconst MatchMedia = {\r\n  mobile: window.matchMedia(`(width <= ${pxToRem(767.98)}rem)`),\r\n}\r\n\r\nexport default MatchMedia","const defineScrollBarWidthCSSVar = () => {\r\n    document.documentElement.style.setProperty(\r\n      '--scrollbar-width',\r\n      `${window.innerWidth - document.documentElement.clientWidth}px`\r\n    )\r\n  }\r\n  \r\n  export default defineScrollBarWidthCSSVar"],"names":["$0e9769a1f738423d$export$2e2bcd8739ae039","selectors","root","overlay","burgerButton","stateClasses","isActive","isLock","constructor","rootElement","document","querySelector","overlayElement","burgerButtonElement","bindEvent","onBurgerButtonClick","classList","toggle","documentElement","addEventListener","$55ef01291f2133b3$var$BaseComponent","Error","getProxyState","initialState","Proxy","get","target","prop","set","newValue","oldValue","updateUI","$55ef01291f2133b3$export$2e2bcd8739ae039","$85eb857beeacec9d$var$rootSelector","$85eb857beeacec9d$var$Tabs","button","content","stateAttributes","ariaSelected","tabIndex","buttonElements","querySelectorAll","contentElements","state","activeTabIndex","findIndex","buttonElement","contains","limitTabsIndex","length","bindEvents","forEach","index","setAttribute","toString","contentElement","activateTab","newTabIndex","focus","previousTab","nextTab","firstTab","lastTab","onButtonClick","buttonIndex","onKeyDown","event","code","metaKey","action","ArrowLeft","ArrowRight","Home","End","$85eb857beeacec9d$export$2e2bcd8739ae039","init","element","$19542c542202b907$var$rootSelector","$19542c542202b907$var$VideoPlayer","video","panel","playButton","videoElement","panelElement","playButtonElement","onPlayButtonClick","play","controls","remove","onVideoPause","add","$19542c542202b907$export$2e2bcd8739ae039","$eb913d046d45497d$export$2e2bcd8739ae039","pixels","$cb5b3f172f08972f$var$rootSelector","$cb5b3f172f08972f$var$ExpandableContent","isExpanded","animationParams","duration","easing","expand","offsetHeight","scrollHeight","animate","maxHeight","$cb5b3f172f08972f$export$2e2bcd8739ae039","$dbbd03019c35c432$var$InputMask","window","IMask","mask","dataset","jsInputMask","console","error","$dbbd03019c35c432$export$2e2bcd8739ae039","$3d90c8372043675f$var$MatchMedia","mobile","matchMedia","$77e2b6b27be919e8$var$rootSelector","$77e2b6b27be919e8$var$Select","originalControl","dropdown","option","isSelected","isCurrent","isOnTheLeftSide","isOnTheRightSide","ariaExpanded","ariaActiveDescendant","currentOptionIndex","selectedOptionElement","originalControlElement","dropdownElement","optionElements","selectedIndex","fixDropdownPosition","updateTabIndexes","newSelectedOptionValue","textContent","trim","value","id","optionElement","toggleExpandedState","collapse","viewportWidth","clientWidth","width","x","getBoundingClientRect","isButtonOnTheLeftViewportSide","buttonCenterX","isMobileDevice","matches","isNeedToExpand","isButtonFocused","activeElement","selectCurrentOption","onClick","isButtonClick","isOutsideDropdownClick","closest","onArrowUpKeyDown","onArrowDownKeyDown","onSpaceKeyDown","onEnterKeyDown","ArrowUp","ArrowDown","Space","Enter","preventDefault","onMobileMatchMediaChange","onOriginalControlChange","$77e2b6b27be919e8$export$2e2bcd8739ae039","style","setProperty","innerWidth"],"version":3,"file":"future-tech.8fc0a54f.js.map"}